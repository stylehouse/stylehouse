Pictures-hashy-misc-3	-Ness		tige:94bafb27e2a0
  Something	-Eight	
    3	-seven	
      &ts?c?	-Womb	
        Picmodu		
          becomes		"becomes"	fs:6,hs:296
          tos		"tos"	fs:6,hs:634
          untos		"la"	fs:6,hs:856
          basictsc		"la"
          moretsc		"la"	dis:4,fs:6
          tctitle		"tctitle"
          tcstyle		"tcstyle"	hs:999,mar
          ts0		"0"	fs:6
      boxcap_test_situation	-Womb	
        situa		
          pile1			dis,pa:0.1
            pile1-label		"pile1"	hs:296,pa:0.2
            <		"<"
            yondsome			dis,pa:0.1
              yondsome-label		"yondsome"	hs:296,pa:0.2
              insidde		"insidde"
            >		">"
          pile2			dis,pa:0.1
            pile2-label		"pile2"	hs:296,pa:0.2
            outside		"outside"
          Achgindi		dupfiu:2	dis,pa:0.1
            Achgindi-label		"Achgindi"	hs:296,pa:0.2
            stuff		"stuff"
            stuff		"stuff"
            andmore		"andmore"
          Achgindi 2			dis,pa:0.1
            Achgindi-label		"Achgindi"	hs:296,pa:0.2
            additional		"additional"
      ahk()	-hat	
        -hat	-Hash	
          aC	-Cish	"bling 3"	~
            y	-Hash		~
              cumula	-Hash	
                0	-String	"ar"
                1	-String	"uniques"
                2	-String	"all"
                3	-Number	"3"
                4	-Num	"3"
            c	-Hash		~
              cumu	-Hash	
                la	-Hash	
                  0	-String	"va"
                  1	-String	"vava"
            sc	-Hash	
              usual	-Hash	
                scing	-Hash	
                  things	-Number	"1"
              more	-Hash	
                1	-Number	"4"
                3	-Number	"4"
              moren	-Number	"1"
              mores	-Number	"1"
              cumu	-Hash	
                la	-Hash	
                  0	-String	"place"
                  1	-String	"loose"
                loose	-Hash	
                  0	-String	"ly"
          notC	-Hash	
            things	-Hash	
              that	-Hash	
                were	-String	"there"
              all	-Hash	
                was	-Hash	
                  0	-String	"finiga"
                  1	-String	"finigaL"
                  3	-Number	"3"
              FROT	-Hash	
                was	-Hash	
                  finiga	-Number	"3"
            vari	-Hash	
              k	-Number	"1"
            y	-Hash	
              varo	-Number	"1"
            c	-Hash	
              all	-Hash	
                was	-Hash	
                  3	-Number	"1"
      hashkv()	-hat	
        -hat	-Hash	
          remap	-Hash	
            abc	-Hash	
              aye	-Number	"4"
              bee	-Number	"3"
              cee	-Number	"2"
            disc	-Hash	
              the aye	-String	"said 4"
              the bee	-String	"said 3"
              the cee	-String	"said 2"
          "ark:$v"	-Hash	
            ark	-String	"$v"
          "'it' -> {it:1}"	-Hash	
            it	-Number	"1"
          "[[n.c.sip,n]+] -> {'0 1 2':n}"	-Hash	
            0 1 2	-String	"One"
            0 1 2 1	-String	"Two"
          !N.length -> {}	-Hash	
          "'key',{thing:1} -> {key:{thing:1}}"	-Hash	
            key	-Hash	
              thing	-Number	"1"
      peel()	-hat	
        -hat	-Hash	
          one	-Hash	
            can	-Number	"1"
          two	-Hash	
            can	-Number	"1"
            you	-Number	"1"
          two[5]	-Hash	
            can	-Number	"1"
            you	-String	"feel"
          "three, first : only"	-Hash	
            the	-String	"lunch:tonight"
            that	-Number	"1"
            was	-String	":fiver"
      arq()	-hat	
        -hat	-Hash	
          already	-Hash	
            seeing	-Hash	
              theeing	-String	"is"
          put into	-Hash	
            seeing	-Hash	
              thanks	-Number	"3"
          "!peel, put into"	-Hash	
            seeing	-Hash	
              thanks	-String	"diat"
          "peel, put into 2"	-Hash	
            thanks	-Hash	
              figaro	-Number	"1"
              thjin	-String	"k"
          "peel some, dont put into"	-Hash	
            thanks	-String	"figaro,thjin:k"
            seeing	-Hash	
              fully	-String	"knowing"
              myself	-Number	"1"
          "peel, dont put into"	-Hash	
            thanks	-Hash	
              figaro	-Number	"1"
              thjin	-String	"k"
            seeing	-Hash	
              fully	-Number	"2"
              five	-Number	"5"
          see nothing	-Hash	
            seeing	-Hash	
              thanks	-String	"figaro,thjin:k"
              se	-Hash	
                fully	-Number	"2"
                five	-Number	"5"
          see nothing qk/$k=dept	-Hash	
            seeing	-Hash	
              abranchof	-Hash	
                thanks	-String	"figaro,thjin:k"
                se	-Hash	
                  fully	-Number	"2"
                  five	-Number	"5"
      ex simple	-hat	
        -hat	-Hash	
          ro	-Hash	
            ela	-String	"borate"
            ti	-Number	"4"
            fly	-Number	"1"
            la	-Number	"4"
          la	-Hash	
            fly	-Number	"1"
            ti	-Number	"4"
            la	-Number	"4"
          nd	-Hash		♲:^/ro,⦄:4
      ksaf()	-hat	
        -hat	-Hash	
          origin	-Hash	
            h	-Hash	
              Long	-String	"way going to"
              Get	-String	"my medicine"
              Skys	-String	"the autumn grey of a lonely wren"
              Piano	-String	"from a window played"
              Gone	-String	"tomorrow, gone yesterday"
              I	-String	"found it in the street"
              At	-String	"first I did not see"
              Lying	-String	"at my feet"
              A	-String	"trampled rose"
            a	-Hash	
              0	-String	"Long"
              1	-String	"Get"
              2	-String	"Skys"
              3	-String	"Piano"
              4	-String	"Gone"
              5	-String	"I"
              6	-String	"At"
              7	-String	"Lying"
              8	-String	"A"
          on hash	-Hash	
            until	-Hash	
              0	-String	"Long"
              1	-String	"Get"
            til	-Hash	
              0	-String	"Long"
              1	-String	"Get"
              2	-String	"Skys"
            aft	-Hash	
              0	-String	"Gone"
              1	-String	"I"
              2	-String	"At"
              3	-String	"Lying"
              4	-String	"A"
            after	-Hash	
              0	-String	"I"
              1	-String	"At"
              2	-String	"Lying"
              3	-String	"A"
          on array	-Hash	
            until	-Hash	
              0	-String	"Long"
              1	-String	"Get"
            til	-Hash	
              0	-String	"Long"
              1	-String	"Get"
              2	-String	"Skys"
            aft	-Hash	
              0	-String	"Gone"
              1	-String	"I"
              2	-String	"At"
              3	-String	"Lying"
              4	-String	"A"
            after	-Hash	
              0	-String	"I"
              1	-String	"At"
              2	-String	"Lying"
              3	-String	"A"
          where	-Hash	
            after v~~/yesterday/	-Hash	
              0	-String	"I"
              1	-String	"At"
              2	-String	"Lying"
              3	-String	"A"
            after v~~/yesterday/ til k~~'At'	-Hash	
              0	-String	"I"
              1	-String	"At"
             same + hash sliced	-Hash	
              I	-String	"found it in the street"
              At	-String	"first I did not see"
            after v~~/yesterday/ til v~~/^L/ + hash sliced	-Hash	
              I	-String	"found it in the street"
              At	-String	"first I did not see"
              Lying	-String	"at my feet"
            until v~~/indo/	-Hash	
              0	-String	"Long"
              1	-String	"Get"
              2	-String	"Skys"
            aft k~~/ing/	-Hash	
              0	-String	"Lying"
              1	-String	"A"
      grep()	-hat	
        -hat	-Hash	
          Piano	-Hash	
            Piano	-String	"from a window played"
          no a	-Hash	
            Get	-String	"my medicine"
            I	-String	"found it in the street"
            At	-String	"first I did not see"
          a value	-Hash	
            Lying	-String	"at my feet"
          for truth	-Hash	
            la	-Number	"1"
            li	-Number	"4"
      flatten()	-hat	
        -hat	-Hash	
          doc	-Hash	
            0	-Number	"1"
            1	-Number	"1"
            2	-Number	"2"
          N = z|N	-Hash	
            0	-Number	"1"
      indexOf string!=num	-hat	
        -hat	-Hash	
          l	-Hash	
            0	-Num	"1"
            1	-Num	"2"
            2	-Num	"3"
          li	-Number	"-1"
          number_btw	-Number	"9"
      null <>-ier than undefined	-hat	
        -hat	-Hash	
          null_lt_6	-String	"true"
          null_gt_6	-String	"false"
          null_gt_neg6	-String	"true"
          undef_lt_6	-String	"false"
          undef_gt_6	-String	"false"
          undef_gt_neg6	-String	"false"
      more types	-hat	
        -hat	-Hash	
          zero	-Hash	
            0	-String	"true"
            1	-String	"true"
            2	-String	"false"
          undef	-Hash	
            0	-String	"false"
            1	-String	"false"
            2	-String	"true"
