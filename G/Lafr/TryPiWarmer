# test, runs on W:Thy
n doafew 1 s:Things!
$R = A.Run

S 1 test data for -hat ref noticing, limits, specialfx
    $sixer = me&openEight,'Something'
        # $time-seven, as long as it contains something:
        # to make stuff up
        $dat = me&PiRet_data
        dat.moreso = dat.asee
        $Bow = sixer(['Bowler-hat',{s:dat,lo:'ve'}])

        $da = {more:'some',figaro:dat.asee}
        da.furhtin = {llatin:4}
        $Bow = sixer(['Lol-hat',{s:da,lo:'veee'}])

        $da = {fer:dat.asee,even:'more',figaro:dat.asee}
        da.furhtin = {llabin:4}
        $Bow = sixer(['Room-hat',{s:da,lo:'veeeeeeee'}])
        # 
        $i = 0
        while (i < 60) {
            da = da.th = {}
            i++
        }
        da.is = 'all'
        # < &Eing preferring this to more level$n
        #   diversity seeking
        $ej = Bowc&s.neesd = Cye(['Nees',3
            ,{mo:3,tor:68,functions:"of an elabourate sort",s:"Thsideratea"}])
        ejy&fig = dat.asee
        ejy&vig = 2
        Bowc&s.leveridge = Cye(['Nose',7,{s:'li'}])
        $i = 0
        while (i < 55) {
            Bowc&s['lever'+i] = 'thing'
            i++
        }
        
    $sixer = me&openEight,'Someact'
        $da = {as:dat.asee,fol:33,vanas:dat.asee,vaees:dat.asee}
        $Bow = sixer(['Bowler-hat',{s:da}])

S 2 twos
    $sixer = me&openEight,'brackstract'
    
    # < Tool for zooming into Ying-gate
    #$s = 4s&interestoYing
    $s = me&mock_Thyergate,R
    !s || !ss&X and return me&tc,"awaits"
    ss&X.A != R and debugger
    # X by &bracki (ish), make &Shx_isX
    # < the &Shx p.ist('X') check is too silent
    me&brackstract,ss&X
    
    # < a holding X, knowing what format the inner might like
    each ks R.sc {
        !k.endsWith('W') && (!isob(s) || isC(s) || !isC(s.A)) and continue
        # the &Saturn %%inst,listen_node there coops these:
        $pi = k.endsWith('W') ? 'Womb' : 'Fez'
        sixer([k,{pi,s}])
    }
    
S 3 Pictures hashy misc
    $sixer = me&openEight,'Something'
    $hat = (t,s,c) => sixer([t,ex({pi:'hat',s},c||{})])
    
    $ro = {ela:'borate',ti:3}
    $la = {fly:1,ti:4,la:3}
    $nd = ex(ro,la)
    hat('ex simple',{ro,la,nd})
    
    

