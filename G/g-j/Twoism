# js the way in, fetching into an eval
# non-G&way way: fetch into an eval
$way = &ty{
    $.ajax('way/'+t).done(&s{
        $f;
        eval(['f = function (ar) {',s,'}'].join("\n"));
        $re = f({});
        y and y(re);
    });
};

$ch = &s{
    $("<p>").appendTo(document.body).text(s);
};
# load $t.js to C with s&I
window.Cyeblong = &v{
    return {t:v[0], y:{cv:v[1]||0.1}, c:v[2]||{}, sc:v[3]||{}};
};
$loadI = &t{
    $tocfunc = t+'_current';
    !window[tocfunc] and throw "Notocfunc: "+tocfunc;
    $toc = window[tocfunc]();
    
    $W = Cyeblong([t]);
    Ws&I = {};
    
    $D;
    each iv toc {
        $ind = v.shift();
        $C = Cyeblong(v);
        if (ind == '') {
            D = Ws&I[C.t] = C;
            D.y.tw = {};
            D.y.tv = {};
            Ds&z ||= [];
        }
        else if (ind == '  ') {
            D.t != s&js and throw "Csjs not last D", C, D;
            c&code = window[s&name];
            typeof c&code != 'function' and throw "Cccode not function", C, D;
            # grow I
            D.y.tv[C.t] ||= {};
            D.y.tv[C.t][C.y.cv] = C;
            D.y.tw[C.t] = C;
            $l = Ds&z.slice(-1);
            l[0] and l[0].y.next = C;
            Ds&z.push(C);
            D.y.in ||= C;
            if (D.t === 'i' && (C.t === 'h' || C.t === 't')) {
                G[C.t] = c&code;
            }
        }
        else {
            throw "deep C: "+t, v
        }
    }
    return W
};

# Automation
A = window.A = Cyeblong(['top']);
A.y = A;
A.1 = A.2 = A.3 = A.4 = A.5 = A;
1s&N = [];
# GOING - gev insists on A.4.up while finding path in
$Y = A.up = Cyeblong(['outside']);
Y.y = Y;
Y.2 = A;

# Culture
$C = Cyeblong(['Top']);
# Grind
window.G = Cyeblong(['Gee']);
G.y = G;
# Telomena
$T = {};

# mind as I
$M = 'Hunt'.split(' ').map(t => loadI(t));
$W = M[0];
A.I = Ws&I;
4c&ttl = 3600;

# mind as me
$me = 4c&me = window.me = {};
me.Ja = {}; # pins
me.timestamp = &{ return(new Date).toISOString() };
A&me = me;
# from all these epochs of development (more in Wayout, Peace etc)
$list = ('NutGravy iooia '+
    'Soogle Coffle Packle Foogla Fividy Fourism '+
    'Text')
    
    .split(' ');
$however = 1;
$someend = &{
    however--
    however == 0 and way('Threeism')
};
$morelist = &i{
    $t = list[i];
    !t and return someend();
    way(t,&r{
        t == 'iooia' and me.io = r
        morelist(i+1);
    });
};
morelist(0);

# also since they are not G&way:
# A5Iw shall know these, ghost updates begin
'Soogle Packle Coffle Foogla EleMento EleVisAn Fourism'.split(' ').map(&t{
    however++; G&way,t,{},someend
});
